package com.natwest;

import java.time.*;
import java.util.Random;

public class Account {
  private int accountNumber, customerId;
  private double accountBalance;
  private Category accountType;
  private LocalDateTime dateOpened;

  // default constructor
  public Account() {
  }

  // parameterised constructor
  public Account(int accountNumber, int customerId, double accountBalance, Category accountType,
      LocalDateTime dateOpened) {
    this.accountNumber = accountNumber == -1 ? generateAccNum() : accountNumber;
    this.customerId = customerId;
    this.accountBalance = accountBalance;
    this.accountType = accountType;
    this.dateOpened = dateOpened;
  }

  public int getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(int accountNumber) {
    this.accountNumber = accountNumber;
  }

  public int getCustomerId() {
    return customerId;
  }

  public void setCustomerId(int customerId) {
    this.customerId = customerId;
  }

  public double getAccountBalance() {
    return accountBalance;
  }

  public void setAccountBalance(double accountBalance) {
    this.accountBalance = accountBalance;
  }

  public Category getAccountType() {
    return accountType;
  }

  public void setAccountType(Category accountType) {
    this.accountType = accountType;
  }

  public LocalDateTime getDateOpened() {
    return dateOpened;
  }

  public void setDateOpened(LocalDateTime dateOpened) {
    this.dateOpened = dateOpened;
  }

  @Override
  public String toString() {
    return accountNumber + "," + customerId + ","
        + accountBalance + "," + accountType + "," + dateOpened;
  }

  // method to generate a random accNum between 1 and 5000
  public int generateAccNum() {
    return new Random().nextInt(5000) + 1;
  }

  public static Account generateAccount(String accString) {
    // this method will parse the string generated by toString method
    String[] parts = accString.split(",");

    return new Account(
        Integer.parseInt(parts[0]),
        Integer.parseInt(parts[1]),
        Double.parseDouble(parts[2]),
        new Category(),
        LocalDateTime.parse(parts[4]));
  }
}
